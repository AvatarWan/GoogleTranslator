# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Name of version  (ie 5.5.0)'
        required: true
        
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-linux:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
        - os: ubuntu-latest
          pyinstaller: JackMcKew/pyinstaller-action-linux@0.1.4
        
        - os: windows-latest
          pyinstaller: JackMcKew/pyinstaller-action-windows@v0.1.2

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: OS
        run: echo ${{ matrix.os }}.
      
      - uses: actions/checkout@v2

      - name: Package Windows Application
        uses: ${{ matrix.os }}
        with:
          path: ./
          tkinter: true


#       - name: Package Windows Application
#         if: runner.os == 'Windows'
#         run: echo "Widows Working!"
#         uses: JackMcKew/pyinstaller-action-windows@v0.1.2
#         with:
#           path: ./
#           tkinter: true

#       - name: Package Linux Application
#         if: runner.os == 'Linux'
#         run: echo "Linux Working!"
#         uses: JackMcKew/pyinstaller-action-linux@0.1.4
#         with:
#           path: ./
#           tkinter: true
      
#       - name: Upload ${{ matrix.os }} Artifact
#         uses: actions/upload-artifact@v2
#         with:
#           name: ${{ matrix.filename }}
#           path: dist/linux/app*

#   release:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest
#     steps:
#       - name: Download ubuntu-latest Artrifact
#         uses: actions/download-artifact@v2
#         with:
#           name: linux
#           path: GoogleTranslator-v${{ github.event.inputs.versionName }}-linux
      
#       - name: Download windows-latest Artrifact
#         uses: actions/download-artifact@v2
#         with:
#           name: win
#           path: GoogleTranslator-v${{ github.event.inputs.versionName }}-win
          
#       - name: List All Files
#         run: ls

# - uses: ncipollo/release-action@v1
#         with:
#           artifacts: "dist/linux/app"
#           name: Google Translate v${{ github.event.inputs.versionName }}
#           tag: v${{ github.event.inputs.versionName }}
#           token: ${{ secrets.GITHUB_TOKEN }}
